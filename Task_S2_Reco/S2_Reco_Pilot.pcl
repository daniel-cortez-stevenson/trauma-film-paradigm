### Recognition Pilot Experiment
### Author: Daniel Cortez Stevenson
### Questions or comments? Contact: [daniel.stevenson@charite.de]

#-------------------------------------------------------------------
### Request experimenter input for Run # (1, 2, 3, or 4) ###
preset int run_nummer;

### Set timing here: ###

# Set duration of possible jitter events (ms)
array<int> jitters[5] = {5000, 5500, 6000, 6500, 7000};

### Randomize stimuli using this array ###
array <int> bilder[80] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
	21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
	41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
	61,62,63,64,65,66,67,68,69,10,71,72,73,74,75,76,77,78,79,80};
bilder.shuffle();

### Initialize Behavioral Log File ###
output_file ofile = new output_file;
string ofilename = "../Behavioral_Log_Files/s2_recognition_pilot_" + logfile.subject() + ".csv";
ofile.open(ofilename, file_append, true);
ofile.print("Task_Name, VPN, Run, Trial, Date, Time, Stim_ID, " +
				"Stim_Onset(ms_since_trigger), Stim_Alt=1_or_Neu=2, " +
				"AltNeu_Button, AltNeu_Correct=1, AltNeu_RT, " +
				"WieSicher_ID, WieSicher_Onset, WieSicher_Reversed=1, " +
				"WieSicher_Button, WieSicher_Response, WieSicher_RT" + "\n");

#---- fmri trigger setzen ---------------------------

int trigger = 5;

Cue_Bed.present();         # instruction for 8 s

#---- fmri wartet bis trigger = 5 (8 s) ------------

loop until (pulse_manager.main_pulse_count() >= trigger)
	begin
	end;

# -----------------------------------------------------------------
# Begin Experiment
# -----------------------------------------------------------------



loop				# Begin trial loop
	int t = 1
until
	t > 80
begin
	# Select Jitter Time from available jitter times
	int jit_ind = random(1,jitters.count());
	int jit = jitters[jit_ind];
	# Set Jitter Time
	stim_event.set_delta_time(jit);
	string jitter_event_code = "jit_" + string(jit);
	Vorb.set_event_code(jitter_event_code);

	# Select minimum time to Frag presentation = jitter + stimulus picture [2000ms]
	int min_trial_time = jit + 2000;
	ab2.set_time(min_trial_time);

	# Set Stimulus trial event code as filename & Set stimulus picture
	# Get picture file name
	string stimulus_fname = stimulus_bilder[bilder[t]].filename();
	# Remove the directory
	stimulus_fname = stimulus_fname.replace( stimulus_directory, "" );
	stim_event.set_event_code(stimulus_fname);
	# Set Stimulus picture (and default picture as the same to ensure stimulus is
	# always presented for at least 2000 ms)
	stim_bild.set_part(1, stimulus_bilder[bilder[t]]);
	default.set_part(1, stimulus_bilder[bilder[t]]);

	# Code 'Wie Sicher ...' Frag as 'reversed (1)' or 'normal (0)', and set
	# Frag image.
	int rev = random(0,1);
	string abfrage2_fname;
	if (rev == 0) then
		abfrage2_fname = abfrage2.filename();
		ab2_bild.set_part(1, abfrage2);
	elseif (rev == 1) then
		abfrage2_fname = abfrage2r.filename();
		ab2_bild.set_part(1, abfrage2r);
	end;
	# Set abfrage 2 image
	abfrage2_fname = abfrage2_fname.replace(stimulus_directory, "");
	ab2.set_event_code(abfrage2_fname);

	# Get Date and Time
	string stim_cal = date();
	string stim_clock = date_time("tt");

	### MAIN PRESENTATION COMMAND ###
	full_trial.present();

	# Get Button Presses
	int button_press = stimulus_manager.get_stimulus_data(stimulus_manager.stimulus_count() - 1).button();
	int button_press_2 = stimulus_manager.get_stimulus_data(stimulus_manager.stimulus_count()).button();

	# Get the correct button answer: 1 if alt, 2 if neu
	# Record response 'alt' or 'neu'
	int correct_answer;
	if (stimulus_bilder[bilder[t]].description() == "alt")then
		correct_answer = 1;
	elseif (stimulus_bilder[bilder[t]].description() == "neu")then
		correct_answer = 2;
	end;

	# Determine Correct or Incorrect
	int correct;
	if (correct_answer == button_press) then
		correct = 1;
	else
		correct = 0;
	end;

	# Get Response value for "Wie Sicher ..." (reverse coding)
	string abfrage2_resp;
	if (rev == 0) then
		abfrage2_resp = string(button_press_2);
	elseif (rev == 1) then
		abfrage2_resp = string(5 - button_press_2);
	end;

	# Get Stim Data for RT and approximate Stimulus Bild Presentation Time
	stimulus_data stim_data = stimulus_manager.get_stimulus_data(stimulus_manager.stimulus_count() - 1);
	stimulus_data ab2_data = stimulus_manager.get_stimulus_data(stimulus_manager.stimulus_count());

	# Set rausschreib text & present rausschreib. pict_id/ab_id must be used due
	# to filenames containing '_'.
	string pict_id = stimulus_fname.replace( ".jpg", "" );
	pict_id = pict_id.replace( ".png", "" );
	pict_id = pict_id.replace( "_", "" );
	string ab2_id = abfrage2_fname.replace( ".jpg", "" );
	ab2_id = ab2_id.replace( ".png", "" );
	ab2_id = ab2_id.replace( "_", "" );

	string schreib_code =	"B" +
							"_pict_" +
							logfile.subject() + "_" +
							string(run_nummer) + "_" +
							string(t) + "_" +
							stim_cal + "_" +
							stim_clock + "_" +
							pict_id + "_" +
							string(stim_data.time() - 8000) + "_" +
							string(correct_answer) + "_" +
							string(button_press) + "_" +
							string(correct) + "_" +
							string(stim_data.reaction_time()) + "_" +
							ab2_id + "_" +
							string(ab2_data.time() - 8000) + "_" +
							string(rev) + "_" +
							abfrage2_resp + "_" +
							string(button_press_2) + "_" +
							string(ab2_data.reaction_time());
	schreib.set_event_code(schreib_code);
	rausschreib.present();

	# Write Trial Data to Behavioral Log File
	ofile.print("S2_Recognition_Pilot, " +
					logfile.subject() + ", " +
					string(run_nummer) + ", " +
					string(t) + ", " +
					stim_cal + ", " +
					stim_clock + ", " +
					stimulus_fname + ", " +
					string(stim_data.time() - 8000) + ", " +
					string(correct_answer) + ", " +
					string(button_press) + ", " +
					string(correct) + ", " +
					string(stim_data.reaction_time()) + ", " +
					abfrage2_fname + ", " +
					string(ab2_data.time() - 8000) + ", " +
					string(rev) + ", " +
					abfrage2_resp + ", " +
					string(button_press_2) + ", " +
					string(ab2_data.reaction_time()) + "\n");

	t = t + 1; #iterate trial
end;						# End Trial Loop #


# Present fixation cross for 10 sec and say "Danke!"
ende.present();
